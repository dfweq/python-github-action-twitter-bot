name: Speech-to-Tweet Processor
on:
  push:
    branches:
      - speech-to-tweet
    paths:
      - 'audio/**'
  workflow_dispatch:

jobs:
  process-audio:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository content
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Find new audio files
        id: find-audio
        run: |
          # Get the list of files added in the last commit that are in the audio directory
          AUDIO_FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep '^audio/' | grep -E '\.(mp3|m4a|wav|ogg|webm)$' || echo "")
          if [ -n "$AUDIO_FILES" ]; then
            echo "Found new audio files: $AUDIO_FILES"
            echo "::set-output name=files::$AUDIO_FILES"
            echo "::set-output name=has_files::true"
          else
            echo "No new audio files found"
            echo "::set-output name=has_files::false"
          fi

      - name: Set up Python
        if: steps.find-audio.outputs.has_files == 'true'
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        if: steps.find-audio.outputs.has_files == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install openai tweepy requests

      - name: Process audio and generate tweets
        if: steps.find-audio.outputs.has_files == 'true'
        run: |
          python speech_to_tweet.py "${{ steps.find-audio.outputs.files }}"
        env:
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET_KEY: ${{ secrets.TWITTER_API_SECRET_KEY }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Update processing status and history
        if: steps.find-audio.outputs.has_files == 'true'
        run: |
          # Update processing status for the user to see
          # This would typically update a status file that the frontend could check
          echo "Processing completed at $(date)" > status/latest_processing.txt
          
          # Commit the changes
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "Github Actions"
          git add status/latest_processing.txt speech_history.json
          git commit -m "Update speech processing status and history" || echo "No changes to commit"
          git push origin main || echo "No changes to push"